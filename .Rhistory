#Relación entre países con tipo de catetegoría LIGERO
datos<-NULL
tbl_Ligero<-tbl_analisis %>% filter(tipoM=="Ligero")  %>% group_by(pais,tipoM) %>% slice(1)
aux_tbl<-full_join(tbl_Ligero,tbl_Ligero,by="tipoM")
aux_tbl<- subset(aux_tbl, select = c(1,3,2))
if(nrow(aux_tbl)<=1)
{
nodosLigero<- data.frame("Pais"=aux_tbl[1,1])
colnames(nodosLigero) <- c("Pais")
conexionesLigero<-aux_tbl
colnames(conexionesLigero) <- c("pais1","pais2","tipoM")
conexionesLigero[]
} else{
for (i in 1:nrow(aux_tbl)) {
auxP1<-  aux_tbl$pais.x[i]
auxP2<-  aux_tbl$pais.y[i]
auxT<-  aux_tbl$tipoM[i]
if(auxP1==auxP2)
{
}
else
{
lista<- c(auxP1,auxP2)
lista<-sort(lista, index.return = TRUE)
lista<- data.frame(lista$x)
aux<- data.frame("pais1"=lista[1,1],"pais2"=lista[2,1],"tipoM"=auxT)
datos<-rbind(datos,aux)
}
}
}
conexionesLigero<-datos %>% group_by(pais1,pais2) %>% slice(1)
paises<-aux_tbl %>% group_by(pais.x) %>% slice(1)
nodosLigero<-subset(paises, select = -c(2,3))
colnames(nodosLigero) <- c("Pais")
LigeroNetwork <- graph_from_data_frame(d=conexionesLigero, vertices=nodosLigero, directed=F)
plot(LigeroNetwork)
#Relación entre países con tipo de catetegoría MODERADO
datos<-NULL
tbl_Moderado<-tbl_analisis %>% filter(tipoM=="Moderado")  %>% group_by(pais,tipoM) %>% slice(1)
aux_tbl<-full_join(tbl_Moderado,tbl_Moderado,by="tipoM")
aux_tbl<- subset(aux_tbl, select = c(1,3,2))
if(nrow(aux_tbl)<=1)
{
nodosModerado<- data.frame("Pais"=aux_tbl[1,1])
colnames(nodosModerado) <- c("Pais")
conexionesModerado<-aux_tbl
colnames(conexionesModerado) <- c("pais1","pais2","tipoM")
conexionesModerado[]
} else{
for (i in 1:nrow(aux_tbl)) {
auxP1<-  aux_tbl$pais.x[i]
auxP2<-  aux_tbl$pais.y[i]
auxT<-  aux_tbl$tipoM[i]
if(auxP1==auxP2)
{
}
else
{
lista<- c(auxP1,auxP2)
lista<-sort(lista, index.return = TRUE)
lista<- data.frame(lista$x)
aux<- data.frame("pais1"=lista[1,1],"pais2"=lista[2,1],"tipoM"=auxT)
datos<-rbind(datos,aux)
}
}
}
conexionesModerado<-datos %>% group_by(pais1,pais2) %>% slice(1)
paises<-aux_tbl %>% group_by(pais.x) %>% slice(1)
nodosModerado<-subset(paises, select = -c(2,3))
colnames(nodosModerado) <- c("Pais")
ModeradoNetwork <- graph_from_data_frame(d=conexionesModerado, vertices=nodosModerado, directed=F)
plot(ModeradoNetwork)
#Relación entre países con tipo de catetegoría FUERTE
datos<-NULL
tbl_Fuerte<-tbl_analisis %>% filter(tipoM=="Fuerte")  %>% group_by(pais,tipoM) %>% slice(1)
aux_tbl<-full_join(tbl_Fuerte,tbl_Fuerte,by="tipoM")
aux_tbl<- subset(aux_tbl, select = c(1,3,2))
if(nrow(aux_tbl)<=1)
{
nodosFuerte<- data.frame("Pais"=aux_tbl[1,1])
colnames(nodosFuerte) <- c("Pais")
conexionesFuerte<-aux_tbl
colnames(conexionesFuerte) <- c("pais1","pais2","tipoM")
conexionesFuerte[]
} else {
for (i in 1:nrow(aux_tbl)) {
auxP1<-  aux_tbl$pais.x[i]
auxP2<-  aux_tbl$pais.y[i]
auxT<-  aux_tbl$tipoM[i]
if(auxP1==auxP2)
{
}
else
{
lista<- c(auxP1,auxP2)
lista<-sort(lista, index.return = TRUE)
lista<- data.frame(lista$x)
aux<- data.frame("pais1"=lista[1,1],"pais2"=lista[2,1],"tipoM"=auxT)
datos<-rbind(datos,aux)
}
}
}
conexionesFuerte<-datos %>% group_by(pais1,pais2) %>% slice(1)
paises<-aux_tbl %>% group_by(pais.x) %>% slice(1)
nodosFuerte<-subset(paises, select = -c(2,3))
colnames(nodosFuerte) <- c("Pais")
FuerteNetwork <- graph_from_data_frame(d=conexionesFuerte, vertices=nodosFuerte, directed=F)
plot(FuerteNetwork)
finalConexiones<-NULL
finalNodos<-NULL
finalConexiones<-rbind(finalConexiones,conexionesMenor)
finalConexiones<-rbind(finalConexiones,conexionesLigero)
finalConexiones<-rbind(finalConexiones,conexionesModerado)
finalConexiones<-rbind(finalConexiones,conexionesFuerte)
#Contar paises--------------------------------------
countEventosPaises<-finalConexiones %>%
group_by(pais2)%>%
tally()
#--------------------------------------
finalNodos<-rbind(finalNodos,nodosMenor)
finalNodos<-rbind(finalNodos,nodosLigero)
finalNodos<-rbind(finalNodos,nodosModerado)
finalNodos<-rbind(finalNodos,nodosFuerte)
finalNodos<-finalNodos %>% group_by(Pais) %>% slice(1)
finalNodos<- na.omit(finalNodos)
any(is.na(finalNodos))
FinalNetwork <- graph_from_data_frame(d=finalConexiones, vertices=finalNodos, directed=F)
E(FinalNetwork)$color <- ifelse(E(FinalNetwork)$tipoM == "Menor", "#c94f4f",
ifelse(E(FinalNetwork)$tipoM == "Ligero", "#4b95c9",
ifelse(E(FinalNetwork)$tipoM == "Moderado", "#4acf60",
ifelse(E(FinalNetwork)$tipoM == "Fuerte", "#c7188d","black"))))
V(datosAnalizar)$color <- sample(rainbow(9),9,replace=FALSE)
E(datosAnalizar)$weight <- runif(length(E(datosAnalizar)),.5,4)
E(datosAnalizar)$color <- ifelse(E(datosAnalizar)$names   == "Menor", "#c94f4f",
ifelse(E(datosAnalizar)$Mag == "Ligero", "#4b95c9",
ifelse(E(datosAnalizar)$Mag == "Moderado", "#4acf60",
ifelse(E(datosAnalizar)$Mag == "Fuerte", "#c7188d","black"))))
#Grafico sin tipo magnitud
visIgraph(FinalNetwork, idToLabel = TRUE,layout = "layout_in_circle")%>%
visNodes(size = 10) %>%
visOptions(highlightNearest = TRUE,
nodesIdSelection = TRUE)%>%
visConfigure(enabled = TRUE)
visNetwork(data$nodes, dataedges)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
## app.R ##
library(shinydashboard)
library(bslib)
library(tidyverse)
library(rvest)
library(dplyr)
library(gifski)
library(ggplot2)
library(plotly)
library(tidyverse)
library(rvest)
library(gganimate)
library(gifski)
library(ggplot2)
library(RColorBrewer)
library(gapminder)
library(tidyverse)
library(dplyr)
library(dummies)
library(kableExtra)
library(scales)
library(lubridate)
library(igraphdata)
library(visNetwork)
library(igraph)
library(threejs)
library(shinyjs)
library(rvest)
dt_sudamerica<- read_html("http://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=-0.014&minlat=-39.910&maxlon=-57.656&minlon=-89.283&sbl=1&pbl=1&caller=self&name=Western%20South%20America&zm=4&mt=ter&rgn=Western%20South%20America&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_centroamerica<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=28.770&minlat=4.920&maxlon=-53.440&minlon=-118.480&sbl=1&pbl=1&caller=self&name=Central%20America&zm=4&mt=ter&rgn=Central%20America&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_sudesteasiatico<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=37.720&minlat=9.800&maxlon=107.580&minlon=64.510&sbl=1&pbl=1&caller=self&name=S.E.%20Asia%20Region&zm=4&mt=ter&rgn=S.E.%20Asia%20Region&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_mediterraneo_oriental<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=48.220&minlat=31.580&maxlon=45.880&minlon=7.560&sbl=1&pbl=1&caller=self&name=E.%20Mediterranean&zm=5&mt=ter&rgn=E.%20Mediterranean&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
# dt_norte_america<- read_html("http://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=55.826&minlat=15.877&maxlon=-52.689&minlon=-135.746&sbl=1&pbl=1&caller=self&zm=2&mt=ter&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
#------------------------------------------------------EXTRAER TABLAS ----------------------------------------------------------
tbl_sudamerica<- dt_sudamerica %>%
html_table()
tbl_sudamerica<- tbl_sudamerica[[1]]
tbl_sudamerica$Group<-"Sudamerica"
tbl_centroamerica<- dt_centroamerica %>%
html_table()
tbl_centroamerica<- tbl_centroamerica[[1]]
tbl_centroamerica$Group<-"Centro_America"
tbl_sudesteasiatico<- dt_sudesteasiatico %>%
html_table()
tbl_sudesteasiatico<- tbl_sudesteasiatico[[1]]
tbl_sudesteasiatico$Group<-"Sudesteasiatico"
tbl_mediterraneo_oriental<- dt_mediterraneo_oriental %>%
html_table()
tbl_mediterraneo_oriental<- tbl_mediterraneo_oriental[[1]]
tbl_mediterraneo_oriental$Group<-"Mediterraneo_oriental"
tbl_sudamerica<- dt_sudamerica %>%
html_table()
tbl_sudamerica<- tbl_sudamerica[[1]]
tbl_sudamerica$Group<-"Sudamerica"
tbl_centroamerica<- dt_centroamerica %>%
html_table()
tbl_centroamerica<- tbl_centroamerica[[1]]
tbl_centroamerica$Group<-"Centro_America"
tbl_sudesteasiatico<- dt_sudesteasiatico %>%
html_table()
tbl_sudesteasiatico<- tbl_sudesteasiatico[[1]]
tbl_sudesteasiatico$Group<-"Sudesteasiatico"
tbl_mediterraneo_oriental<- dt_mediterraneo_oriental %>%
html_table()
tbl_mediterraneo_oriental<- tbl_mediterraneo_oriental[[1]]
tbl_mediterraneo_oriental$Group<-"Mediterraneo_oriental"
# tbl_norte_america<- dt_norte_america %>%
#   html_table()
# tbl_norte_america<- tbl_norte_america[[1]]
# tbl_norte_america$Group<-"Norte_America"
# ---------------------------Unión------------------------------
tabla_sis<- tbl_sudamerica
tabla_sis<-rbind(tabla_sis,tbl_centroamerica)
tabla_sis<-rbind(tabla_sis,tbl_sudesteasiatico)
tabla_sis<-rbind(tabla_sis,tbl_mediterraneo_oriental)
# tabla_sis<-rbind(tabla_sis,tbl_norte_america)
tabla_base <- subset(tabla_sis, select = -c(4,10,11))
# FECHA ACTUAL ******************************************************************************************************************
dia <- as.numeric(format(Sys.Date(),'%d'))
mes <- as.numeric(format(Sys.Date(),'%m'))
anio<- as.numeric(format(Sys.Date(),'%Y'))
# CONJUNTO DE DATOS PARA EL INICIO***********************************************************************************************
tabla_para_inicio <-tabla_base %>% filter(Year==anio)
tabla_anio_pasado <-tabla_base %>% filter(Year==(anio-1))
# CLASIFICACION DE DATOS --------------------------------------------------------------------------------------
# AÑO ACTUA
tbl_clasificado_anio_actual<-tabla_para_inicio %>% separate(8, c("region", "pais"), ", ", extra = "merge")
tbl_clasificado_anio_actual<- na.omit(tbl_clasificado_anio_actual)
tbl_clasificado_anio_actual$tipoM <-
with(tbl_clasificado_anio_actual,
ifelse(tbl_clasificado_anio_actual$Mag > 0 & tbl_clasificado_anio_actual$Mag <=3.9, "Menor",
ifelse(tbl_clasificado_anio_actual$Mag >=4 & tbl_clasificado_anio_actual$Mag <=4.9, "Ligero",
ifelse(tbl_clasificado_anio_actual$Mag >=5 & tbl_clasificado_anio_actual$Mag <=5.9, "Moderado",
ifelse(tbl_clasificado_anio_actual$Mag >=6 & tbl_clasificado_anio_actual$Mag <=6.9, "Fuerte",
ifelse(tbl_clasificado_anio_actual$Mag >=7 & tbl_clasificado_anio_actual$Mag <=7.9,"Mayor",
ifelse(tbl_clasificado_anio_actual$Mag >=8, "Gran",0)))))))
# AÑO PASADO
tbl_clasificado_anio_pasado<-tabla_anio_pasado %>% separate(8, c("region", "pais"), ", ", extra = "merge")
tbl_clasificado_anio_pasado<- na.omit(tbl_clasificado_anio_pasado)
tbl_clasificado_anio_pasado$tipoM <-
with(tbl_clasificado_anio_pasado,
ifelse(tbl_clasificado_anio_pasado$Mag > 0 & tbl_clasificado_anio_pasado$Mag <=3.9, "Menor",
ifelse(tbl_clasificado_anio_pasado$Mag >=4 & tbl_clasificado_anio_pasado$Mag <=4.9, "Ligero",
ifelse(tbl_clasificado_anio_pasado$Mag >=5 & tbl_clasificado_anio_pasado$Mag <=5.9, "Moderado",
ifelse(tbl_clasificado_anio_pasado$Mag >=6 & tbl_clasificado_anio_pasado$Mag <=6.9, "Fuerte",
ifelse(tbl_clasificado_anio_pasado$Mag >=7 & tbl_clasificado_anio_pasado$Mag <=7.9,"Mayor",
ifelse(tbl_clasificado_anio_pasado$Mag >=8, "Gran",0)))))))
#REDES SOCIAL NETWORCK ANALITY********************************************************************************
# REDES ACTUALES---------------------------------------------------------------------------------------------
tbl_redes_actual<- subset(tbl_clasificado_anio_actual, select = -c(1,2,3,5,6,7,8))
tbl_redes_actual<-subset(tbl_redes_actual, select = c(2,4,1,3))
tbl_redes_actual
V(datosAnalizar)
E(datosAnalizar)
V(datosAnalizar)$label <- V(datosAnalizar)$name
V(datosAnalizar)$degree <- degree(datosAnalizar)
visIgraph(datosAnalizar)
xy<-as.data.frame(degree(datosAnalizar))
colnames(xy)<-c("n")
xy
edges<-as_data_frame(datosAnalizar, what="edges")
edges
nodes<-data.frame(V(datosAnalizar)$name)
colnames(nodes) <- c("pais")
nodes
dfx<-edges %>%
group_by(from, to)%>%
tally()
dfx
Pfx<-tbl_redes_actual %>%
group_by(pais,Group)%>%
tally()
Pfx
for(i in 1:nrow(nodes))
{
for(j in 1:nrow(Pfx))
{
if( nodes$pais[i]== Pfx$pais[j]){
nodes$Group[i]<-Pfx$Group[j]
}else if(nodes$pais[i]=="Menor" ||
nodes$pais[i]=="Ligero" ||
nodes$pais[i]=="Moderado" ||
nodes$pais[i]=="Fuerte" || nodes$pais[i]=="Mayor" )
{
nodes$Group[i]<-"categoria"
}
}
}
nodes1 <- data.frame(id =nodes$pais,group=nodes$Group , value=xy$n, label=nodes$pais )
edges1 <- data.frame(from = c(dfx$from), to = c(dfx$to), value=c(dfx$n), label=c(dfx$n),title=c(dfx$n))
graficoUno<- visNetwork(nodes1,edges1,
layout = "layout_in_circle" )%>% visIgraphLayout() %>%
visEdges( label = edges1$label, physics = FALSE) %>% visNodes(size =nodes1$value ) %>%
visOptions(selectedBy = "group",
highlightNearest = TRUE,
nodesIdSelection = TRUE)%>%
visLegend(main = "Categoria de nodo", position = "right")%>%
visInteraction(navigationButtons = TRUE)
graficoUno
data <- toVisNetworkData(datosAnalizar)
colnames(data$nodes)<-c("id","label","value")
colnames(data$edges)<-c("from","to","label","Group")
datanodes<-data$nodes
dataedges<-data$edges
dataedges$title<-data$edges$label
visNetwork(data$nodes, dataedges)
data <- toVisNetworkData(datosAnalizar)
colnames(data$nodes)<-c("id","label","value")
colnames(data$edges)<-c("from","to","label","Group")
datanodes<-data$nodes
dataedges<-data$edges
dataedges$title<-data$edges$label
visNetwork(data$nodes, dataedges)
dataedges
data <- toVisNetworkData(datosAnalizar)
colnames(data$nodes)<-c("id","label","value")
colnames(data$edges)<-c("from","to","label","Group")
datanodes<-data$nodes
dataedges<-data$edges
visNetwork(data$nodes, dataedges)
ui <- dashboardPage(header,sidebar,body)
dataedges
colnames(data$edges)<-c("from","to","label","Group","value")
datanodes<-data$nodes
dataedges<-data$edges
dataedges$title<-data$edges$label
visNetwork(data$nodes, dataedges)
dataedges
data <- toVisNetworkData(datosAnalizar)
colnames(data$nodes)<-c("id","label","value")
colnames(data$edges)<-c("from","to","label","Group","value")
datanodes<-data$nodes
dataedges<-data$edges
dataedges$title<-data$edges$label
visNetwork(data$nodes, dataedges)
data <- toVisNetworkData(datosAnalizar)
edges2 <-data$edges
nodes2 <-data$nodes|
network <- visNetwork(nodes2, edges2)
nodes2 <-data$nodes|
visNetwork(nodes2, edges2)
data <- toVisNetworkData(datosAnalizar)
edges2 <-data$edges
nodes2 <-data$nodes|
visNetwork(nodes2, edges2)
shiny::runApp()
runApp()
shiny::runApp()
tbl_todo_los_datos_magnitud<-tbl_clasificado_anio_actual
runApp()
tbl_todo_los_datos_profundidad
tbl_todo_los_datos_profundidad
tbl_clasificado_anio_actual<-tabla_para_inicio %>% separate(8, c("region", "pais"), ", ", extra = "merge")
tbl_clasificado_anio_actual<- na.omit(tbl_clasificado_anio_actual)
tbl_clasificado_por_profundidad<-tbl_clasificado_anio_actual
tbl_clasificado_anio_actual$tipoM <-
with(tbl_clasificado_anio_actual,
ifelse(tbl_clasificado_anio_actual$Mag > 0 & tbl_clasificado_anio_actual$Mag <=3.9, "Menor",
ifelse(tbl_clasificado_anio_actual$Mag >=4 & tbl_clasificado_anio_actual$Mag <=4.9, "Ligero",
ifelse(tbl_clasificado_anio_actual$Mag >=5 & tbl_clasificado_anio_actual$Mag <=5.9, "Moderado",
ifelse(tbl_clasificado_anio_actual$Mag >=6 & tbl_clasificado_anio_actual$Mag <=6.9, "Fuerte",
ifelse(tbl_clasificado_anio_actual$Mag >=7 & tbl_clasificado_anio_actual$Mag <=7.9,"Mayor",
ifelse(tbl_clasificado_anio_actual$Mag >=8, "Gran",0)))))))
tbl_clasificado_por_profundidad$tipoDepth.km <-
with(tbl_clasificado_por_profundidad,ifelse(tbl_clasificado_por_profundidad$`Depth km` >= 0 & tbl_clasificado_por_profundidad$`Depth km` <=70, "Superficial",
ifelse(tbl_clasificado_por_profundidad$`Depth km` >=70 & tbl_clasificado_por_profundidad$`Depth km` <=300, "Intermedio",
ifelse(tbl_clasificado_por_profundidad$`Depth km` >=301,"Profundo","Error"))))
tbl_todo_los_datos_magnitud<-tbl_clasificado_anio_actual
tbl_todo_los_datos_profundidad<-tbl_clasificado_por_profundidad
tbl_todo_los_datos_profundidad
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
tbl_clasificado_anio_actual
# -------REDES ACTUALES---------------------------------------------------------------------------------------------
tbl_redes_profundidad<- subset(tbl_clasificado_por_profundidad, select = -c(1,2,3,5,6,7,8))
tbl_redes_profundidad<-subset(tbl_redes_profundidad, select = c(2,4,1,3))
tbl_redes_profundidad
View(tbl_redes_profundidad)
View(tbl_clasificado_por_profundidad)
datosAnalizar <- graph.data.frame(tbl_redes_profundidad, directed=T)
V(datosAnalizar)
E(datosAnalizar)
V(datosAnalizar)$label <- V(datosAnalizar)$name
V(datosAnalizar)$degree <- degree(datosAnalizar)
visIgraph(datosAnalizar)
#GRAFICO CON LOS NODOS TIPO MAG CON LIBERIA VISNETWORCK
xy<-as.data.frame(degree(datosAnalizar))
colnames(xy)<-c("n")
edges<-as_data_frame(datosAnalizar, what="edges")
nodes<-data.frame(V(datosAnalizar)$name)
colnames(nodes) <- c("pais")
dfx<-edges %>%
group_by(from, to)%>%
tally()
Pfx<-tbl_redes_actual %>%
group_by(pais,Group)%>%
tally()
for(i in 1:nrow(nodes))
{
for(j in 1:nrow(Pfx))
{
if( nodes$pais[i]== Pfx$pais[j]){
nodes$Group[i]<-Pfx$Group[j]
}else if(nodes$pais[i]=="Intermedio" ||
nodes$pais[i]=="Superficial" ||
nodes$pais[i]=="Profundo" || nodes$pais[i]=="Mas produndos"  )
{
nodes$Group[i]<-"categoria"
}
}
}
nodes1 <- data.frame(id =nodes$pais,group=nodes$Group , value=xy$n, label=nodes$pais )
edges1 <- data.frame(from = c(dfx$from), to = c(dfx$to), value=c(dfx$n), label=c(dfx$n),title=c(dfx$n))
graficodos<- visNetwork(nodes1,edges1,
layout = "layout_in_circle" )%>% visIgraphLayout() %>%
visEdges( label = edges1$label, physics = FALSE) %>% visNodes(size =nodes1$value ) %>%
visOptions(selectedBy = "group",
highlightNearest = TRUE,
nodesIdSelection = TRUE)%>%
visLegend(main = "Categoria de nodo", position = "right")%>%
visInteraction(navigationButtons = TRUE)
graficodos
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
install.packages("leaflet")
runApp()
runApp()
runApp()
leaflet(tabla_para_inicio) %>% addTiles() %>% addMarkers(
clusterOptions = markerClusterOptions()
)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
# WEB SCRAPING ------------------------------------------------------------------------------------------------------
library(rvest)
dt_sudamerica<- read_html("http://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=-0.014&minlat=-39.910&maxlon=-57.656&minlon=-89.283&sbl=1&pbl=1&caller=self&name=Western%20South%20America&zm=4&mt=ter&rgn=Western%20South%20America&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_centroamerica<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=28.770&minlat=4.920&maxlon=-53.440&minlon=-118.480&sbl=1&pbl=1&caller=self&name=Central%20America&zm=4&mt=ter&rgn=Central%20America&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_sudesteasiatico<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=37.720&minlat=9.800&maxlon=107.580&minlon=64.510&sbl=1&pbl=1&caller=self&name=S.E.%20Asia%20Region&zm=4&mt=ter&rgn=S.E.%20Asia%20Region&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_mediterraneo_oriental<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=48.220&minlat=31.580&maxlon=45.880&minlon=7.560&sbl=1&pbl=1&caller=self&name=E.%20Mediterranean&zm=5&mt=ter&rgn=E.%20Mediterranean&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
tbl_sudamerica<- dt_sudamerica %>%
html_table()
tbl_sudamerica<- tbl_sudamerica[[1]]
tbl_sudamerica$Group<-"Sudamerica"
tbl_centroamerica<- dt_centroamerica %>%
html_table()
tbl_centroamerica<- tbl_centroamerica[[1]]
tbl_centroamerica$Group<-"Centro_America"
tbl_sudesteasiatico<- dt_sudesteasiatico %>%
html_table()
tbl_sudesteasiatico<- tbl_sudesteasiatico[[1]]
tbl_sudesteasiatico$Group<-"Sudesteasiatico"
tbl_mediterraneo_oriental<- dt_mediterraneo_oriental %>%
html_table()
tbl_mediterraneo_oriental<- tbl_mediterraneo_oriental[[1]]
tbl_mediterraneo_oriental$Group<-"Mediterraneo_oriental"
dt_sudamerica<- read_html("http://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=-0.014&minlat=-39.910&maxlon=-57.656&minlon=-89.283&sbl=1&pbl=1&caller=self&name=Western%20South%20America&zm=4&mt=ter&rgn=Western%20South%20America&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_centroamerica<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=28.770&minlat=4.920&maxlon=-53.440&minlon=-118.480&sbl=1&pbl=1&caller=self&name=Central%20America&zm=4&mt=ter&rgn=Central%20America&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_sudesteasiatico<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=37.720&minlat=9.800&maxlon=107.580&minlon=64.510&sbl=1&pbl=1&caller=self&name=S.E.%20Asia%20Region&zm=4&mt=ter&rgn=S.E.%20Asia%20Region&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
dt_mediterraneo_oriental<- read_html("https://ds.iris.edu/ieb/evtable.phtml?caller=IEB&orderby=time-desc&src=usgs&limit=5000&maxlat=48.220&minlat=31.580&maxlon=45.880&minlon=7.560&sbl=1&pbl=1&caller=self&name=E.%20Mediterranean&zm=5&mt=ter&rgn=E.%20Mediterranean&title=IEB%20export%3A%205000%20earthquakes%20as%20a%20sortable%20table.&stitle=from%20the%20earliest%20to%20the%20latest%20available%2C%20all%20mags%2C%20all%20depths%2C%20with%20priority%20for%20most%20recent%2C%20limited%20to%205000%2C%20%20showing%20data%20from%20USGS%2C%20")
tbl_sudamerica<- dt_sudamerica %>%
html_table()
tbl_sudamerica<- tbl_sudamerica[[1]]
tbl_sudamerica$Group<-"Sudamerica"
tbl_centroamerica<- dt_centroamerica %>%
html_table()
tbl_centroamerica<- tbl_centroamerica[[1]]
tbl_centroamerica$Group<-"Centro_America"
tbl_sudesteasiatico<- dt_sudesteasiatico %>%
html_table()
tbl_sudesteasiatico<- tbl_sudesteasiatico[[1]]
tbl_sudesteasiatico$Group<-"Sudesteasiatico"
tbl_mediterraneo_oriental<- dt_mediterraneo_oriental %>%
html_table()
tbl_mediterraneo_oriental<- tbl_mediterraneo_oriental[[1]]
tbl_mediterraneo_oriental$Group<-"Mediterraneo_oriental"
# ---------------------------Unión------------------------------
tabla_sis<- tbl_sudamerica
tabla_sis<-rbind(tabla_sis,tbl_centroamerica)
tabla_sis<-rbind(tabla_sis,tbl_sudesteasiatico)
tabla_sis<-rbind(tabla_sis,tbl_mediterraneo_oriental)
tabla_base <- subset(tabla_sis, select = -c(4,10,11))
runApp()
sessionInfo()
